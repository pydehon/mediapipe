/* Copyright 2023 The MediaPipe Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto2";

package mediapipe.tasks.vision.face_stylizer.proto;

import "mediapipe/framework/calculator.proto";
import "mediapipe/framework/calculator_options.proto";
import "mediapipe/tasks/cc/core/proto/base_options.proto";
import "mediapipe/tasks/cc/vision/face_landmarker/proto/face_landmarker_graph_options.proto";

option java_package = "com.google.mediapipe.tasks.vision.facestylizer.proto";
option java_outer_classname = "FaceStylizerGraphOptionsProto";

message FaceStylizerGraphOptions {
  extend mediapipe.CalculatorOptions {
    optional FaceStylizerGraphOptions ext = 513916220;
  }
  // Base options for configuring face stylizer, such as specifying the TfLite
  // model file with metadata, accelerator options, etc.
  optional core.proto.BaseOptions base_options = 1;

  // Options for face landmarker graph.
  optional vision.face_landmarker.proto.FaceLandmarkerGraphOptions
      face_landmarker_graph_options = 2;

  // The width and height of the output face alignment images.
  optional int32 face_alignment_size = 3 [default = 256];
}
