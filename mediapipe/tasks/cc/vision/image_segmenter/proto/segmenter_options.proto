/* Copyright 2022 The MediaPipe Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto2";

package mediapipe.tasks.vision.image_segmenter.proto;

option java_package = "com.google.mediapipe.tasks.vision.imagesegmenter.proto";
option java_outer_classname = "SegmenterOptionsProto";

// Shared options used by image segmentation tasks.
message SegmenterOptions {
  // Optional output mask type.
  enum OutputType {
    UNSPECIFIED = 0;
    // Gives a single output mask where each pixel represents the class which
    // the pixel in the original image was predicted to belong to.
    CATEGORY_MASK = 1;
    // Gives a list of output masks where, for each mask, each pixel represents
    // the prediction confidence, usually in the [0, 1] range.
    CONFIDENCE_MASK = 2;
  }
  // Optional output mask type.
  optional OutputType output_type = 1 [deprecated = true];

  // Supported activation functions for filtering.
  enum Activation {
    NONE = 0;
    SIGMOID = 1;  // Assumes 1-channel input tensor.
    SOFTMAX = 2;  // Assumes multi-channel input tensor.
  }
  // Activation function to apply to input tensor.
  optional Activation activation = 2 [default = NONE];
}
