/* Copyright 2023 The MediaPipe Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto2";

package mediapipe.tasks.vision.pose_landmarker.proto;

import "mediapipe/framework/calculator.proto";
import "mediapipe/framework/calculator_options.proto";
import "mediapipe/tasks/cc/core/proto/base_options.proto";
import "mediapipe/tasks/cc/vision/pose_detector/proto/pose_detector_graph_options.proto";
import "mediapipe/tasks/cc/vision/pose_landmarker/proto/pose_landmarks_detector_graph_options.proto";

option java_package = "com.google.mediapipe.tasks.vision.poselandmarker.proto";
option java_outer_classname = "PoseLandmarkerGraphOptionsProto";

message PoseLandmarkerGraphOptions {
  extend mediapipe.CalculatorOptions {
    optional PoseLandmarkerGraphOptions ext = 516587230;
  }
  // Base options for configuring Task library, such as specifying the TfLite
  // model file with metadata, accelerator options, etc.
  optional core.proto.BaseOptions base_options = 1;

  // Options for pose detector graph.
  optional pose_detector.proto.PoseDetectorGraphOptions
      pose_detector_graph_options = 2;

  // Options for pose landmarks detector graph.
  optional PoseLandmarksDetectorGraphOptions
      pose_landmarks_detector_graph_options = 3;

  // Minimum confidence for pose landmarks tracking to be considered
  // successfully.
  optional float min_tracking_confidence = 4 [default = 0.5];
}
